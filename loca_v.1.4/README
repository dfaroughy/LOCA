######## ############################################################### ########
######### ############################################################# #########
########## #########    ##       #######   #####   #####     ######### ##########
########### ########    ##       ##   ##  ##      ##   ##    ######## ###########
############ #######    ##       ##   ##  ##      #######    ####### ############
########### ########    ##       ##   ##  ##      ##   ##    ######## ###########
########## #########    #######  #######   #####  ##   ##    ######### ##########
######### ############################################################# #########
######## ############################################################### ########
####### ############      LHC  Olympics  Cuts  Analyzer      ############ #######
###### ################################################################### ######

loca_v1.4

Main class is: open_loca(<lhcofile>,<cuts>)
This opens the lhco files and extracts the event blocks from the sample
that satisfy the basic kinematic selection <cuts>.

- usage:

   ------------------------------------------
    with open_loca(<lhcofile>, <cuts>) as sample:
        for event in sample:
            # apply cuts to event
   ------------------------------------------

- event has several attributes:

    event.<objects> : list of selected objects of given type in event
    event.<nobjects> : number of selected objects of given type in event
    event.<object_leading> : leading pt object of of given type in event
    event.<object_subleading> : sub-leading pt object of given type in event

    where: 

          <objects> = photons, electrons, muons, taus, jets, bjets, met, leptons, all_objects
          <nobjects> = nphotons, nelecs, nmuons, ntaus, nleps, njets, nbjets
          <object_leading> = photon_leading, electron_leading, ...
          <object_subleading> = photon_subleading, electron_subleading, ...

- selected objects have a the usuaal kinematic attributes:
    object.pt
    object.eta
    object.is_lepton
    obj1.DeltaR(obj2)
    ...

- the basic selection <cuts> must be given as a python dictionary:

	cuts = { <object> : [pt_min, pt_max, abs(eta_max)] } 

